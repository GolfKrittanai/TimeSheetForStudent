{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';// สร้าง Context สำหรับเก็บข้อมูล auth\nimport{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();// สร้าง Provider สำหรับห่อ component หลัก\nexport const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);// ข้อมูลผู้ใช้ เช่น id, name, role\nconst[token,setToken]=useState(null);// token JWT\n// โหลดข้อมูลจาก localStorage ตอนแอปโหลด\nuseEffect(()=>{const storedToken=localStorage.getItem('token');const storedUser=localStorage.getItem('user');if(storedToken&&storedUser){try{const parsedUser=JSON.parse(storedUser);setToken(storedToken);setUser(parsedUser);}catch(err){console.error('เกิดข้อผิดพลาดในการแปลง user จาก localStorage:',err);localStorage.removeItem('user');// ลบข้อมูลที่ผิดพลาดทิ้ง\n}}},[]);// ฟังก์ชัน login - บันทึก token และ user ลง state และ localStorage\nconst login=_ref2=>{let{token,user}=_ref2;setToken(token);setUser(user);localStorage.setItem('token',token);localStorage.setItem('user',JSON.stringify(user));};// ฟังก์ชัน logout - ล้างข้อมูลออกจาก state และ localStorage\nconst logout=()=>{setToken(null);setUser(null);localStorage.removeItem('token');localStorage.removeItem('user');};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,token,login,logout},children:children});};// hook สำหรับใช้ auth context ได้ง่าย\nexport const useAuth=()=>useContext(AuthContext);","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","token","setToken","storedToken","localStorage","getItem","storedUser","parsedUser","JSON","parse","err","console","error","removeItem","login","_ref2","setItem","stringify","logout","Provider","value","useAuth"],"sources":["C:/Users/pondz/OneDrive/เอกสาร/Github/TimeSheetForStudent-test001/TimeSheetForStudent/timesheet-frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\n// สร้าง Context สำหรับเก็บข้อมูล auth\r\nconst AuthContext = createContext();\r\n\r\n// สร้าง Provider สำหรับห่อ component หลัก\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);   // ข้อมูลผู้ใช้ เช่น id, name, role\r\n  const [token, setToken] = useState(null); // token JWT\r\n\r\n  // โหลดข้อมูลจาก localStorage ตอนแอปโหลด\r\n  useEffect(() => {\r\n    const storedToken = localStorage.getItem('token');\r\n    const storedUser = localStorage.getItem('user');\r\n\r\n    if (storedToken && storedUser) {\r\n      try {\r\n        const parsedUser = JSON.parse(storedUser);\r\n        setToken(storedToken);\r\n        setUser(parsedUser);\r\n      } catch (err) {\r\n        console.error('เกิดข้อผิดพลาดในการแปลง user จาก localStorage:', err);\r\n        localStorage.removeItem('user'); // ลบข้อมูลที่ผิดพลาดทิ้ง\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // ฟังก์ชัน login - บันทึก token และ user ลง state และ localStorage\r\n  const login = ({ token, user }) => {\r\n    setToken(token);\r\n    setUser(user);\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n  };\r\n\r\n  // ฟังก์ชัน logout - ล้างข้อมูลออกจาก state และ localStorage\r\n  const logout = () => {\r\n    setToken(null);\r\n    setUser(null);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, token, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// hook สำหรับใช้ auth context ได้ง่าย\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAE7E;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,WAAW,cAAGN,aAAa,CAAC,CAAC,CAEnC;AACA,MAAO,MAAM,CAAAO,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CAAI;AAC1C,KAAM,CAACU,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAAE;AAE1C;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAW,WAAW,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CACjD,KAAM,CAAAC,UAAU,CAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAE/C,GAAIF,WAAW,EAAIG,UAAU,CAAE,CAC7B,GAAI,CACF,KAAM,CAAAC,UAAU,CAAGC,IAAI,CAACC,KAAK,CAACH,UAAU,CAAC,CACzCJ,QAAQ,CAACC,WAAW,CAAC,CACrBH,OAAO,CAACO,UAAU,CAAC,CACrB,CAAE,MAAOG,GAAG,CAAE,CACZC,OAAO,CAACC,KAAK,CAAC,gDAAgD,CAAEF,GAAG,CAAC,CACpEN,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC,CAAE;AACnC,CACF,CACF,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAC,KAAK,CAAGC,KAAA,EAAqB,IAApB,CAAEd,KAAK,CAAEF,IAAK,CAAC,CAAAgB,KAAA,CAC5Bb,QAAQ,CAACD,KAAK,CAAC,CACfD,OAAO,CAACD,IAAI,CAAC,CACbK,YAAY,CAACY,OAAO,CAAC,OAAO,CAAEf,KAAK,CAAC,CACpCG,YAAY,CAACY,OAAO,CAAC,MAAM,CAAER,IAAI,CAACS,SAAS,CAAClB,IAAI,CAAC,CAAC,CACpD,CAAC,CAED;AACA,KAAM,CAAAmB,MAAM,CAAGA,CAAA,GAAM,CACnBhB,QAAQ,CAAC,IAAI,CAAC,CACdF,OAAO,CAAC,IAAI,CAAC,CACbI,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC,CAChCT,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC,CACjC,CAAC,CAED,mBACEnB,IAAA,CAACC,WAAW,CAACwB,QAAQ,EAACC,KAAK,CAAE,CAAErB,IAAI,CAAEE,KAAK,CAAEa,KAAK,CAAEI,MAAO,CAAE,CAAApB,QAAA,CACzDA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED;AACA,MAAO,MAAM,CAAAuB,OAAO,CAAGA,CAAA,GAAM/B,UAAU,CAACK,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}