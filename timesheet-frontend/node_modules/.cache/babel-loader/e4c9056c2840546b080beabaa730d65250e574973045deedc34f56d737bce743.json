{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kop_k\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\GitHubLS\\\\TimeSheetForStudent\\\\timesheet-frontend\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Box, Typography, TextField, Button } from '@mui/material'; // UI Components จาก Material UI\nimport { useFormik } from 'formik'; // สำหรับจัดการฟอร์ม\nimport * as Yup from 'yup'; // ตรวจสอบความถูกต้องของข้อมูลในฟอร์ม\nimport { loginUser } from '../services/authService'; // ฟังก์ชันเรียก API เข้าสู่ระบบ\nimport { useAuth } from '../context/AuthContext'; // ดึงฟังก์ชัน login จาก Context เพื่อบันทึก token และ user\nimport { useNavigate } from 'react-router-dom'; // สำหรับเปลี่ยนหน้า\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const {\n    login\n  } = useAuth(); // ดึงฟังก์ชัน login มาใช้\n  const navigate = useNavigate(); // ฟังก์ชันเปลี่ยนหน้า\n\n  // กำหนด formik สำหรับจัดการฟอร์ม login\n  const formik = useFormik({\n    initialValues: {\n      studentId: '',\n      password: ''\n    },\n    // ค่าตั้งต้นของฟอร์ม\n    validationSchema: Yup.object({\n      // ตรวจสอบข้อมูลว่าต้องกรอกให้ครบ\n      studentId: Yup.string().required('กรุณากรอกรหัสนักศึกษา'),\n      password: Yup.string().required('กรุณากรอกรหัสผ่าน')\n    }),\n    onSubmit: async values => {\n      try {\n        // เรียก API login ส่งข้อมูลรหัสนักศึกษาและรหัสผ่าน\n        const res = await loginUser(values);\n\n        // บันทึก token และข้อมูลผู้ใช้ลง Context เพื่อใช้ในแอป\n        login(res.data.token, res.data.user);\n\n        // เปลี่ยนหน้าไปตามบทบาทผู้ใช้ (admin หรือ student)\n        navigate(res.data.user.role === 'admin' ? '/admin' : '/student');\n      } catch (err) {\n        // หากเข้าสู่ระบบไม่สำเร็จ แจ้งเตือน\n        alert('เข้าสู่ระบบไม่สำเร็จ');\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: 400,\n      mx: 'auto',\n      mt: 10\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"\\u0E40\\u0E02\\u0E49\\u0E32\\u0E2A\\u0E39\\u0E48\\u0E23\\u0E30\\u0E1A\\u0E1A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E19\\u0E31\\u0E01\\u0E28\\u0E36\\u0E01\\u0E29\\u0E32\",\n        name: \"studentId\",\n        fullWidth: true,\n        margin: \"normal\",\n        value: formik.values.studentId // เชื่อมค่าในฟอร์มกับ Formik\n        ,\n        onChange: formik.handleChange // อัพเดตค่าฟอร์มเมื่อผู้ใช้พิมพ์\n        ,\n        error: formik.touched.studentId && Boolean(formik.errors.studentId) // แสดง error ถ้าข้อมูลไม่ถูกต้อง\n        ,\n        helperText: formik.touched.studentId && formik.errors.studentId // ข้อความแจ้งเตือน\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E1C\\u0E48\\u0E32\\u0E19\",\n        name: \"password\",\n        type: \"password\" // ซ่อนรหัสผ่าน\n        ,\n        fullWidth: true,\n        margin: \"normal\",\n        value: formik.values.password,\n        onChange: formik.handleChange,\n        error: formik.touched.password && Boolean(formik.errors.password),\n        helperText: formik.touched.password && formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mt: 2\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        onClick: () => navigate('/register'),\n        sx: {\n          mt: 1\n        },\n        children: \"\\u0E25\\u0E07\\u0E17\\u0E30\\u0E40\\u0E1A\\u0E35\\u0E22\\u0E19\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"nvOfj1Ibxm7XBNjGrS/SGnpum1Q=\", false, function () {\n  return [useAuth, useNavigate, useFormik];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","Box","Typography","TextField","Button","useFormik","Yup","loginUser","useAuth","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","login","navigate","formik","initialValues","studentId","password","validationSchema","object","string","required","onSubmit","values","res","data","token","user","role","err","alert","sx","maxWidth","mx","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","label","name","fullWidth","margin","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kop_k/OneDrive/เดสก์ท็อป/GitHubLS/TimeSheetForStudent/timesheet-frontend/src/pages/LoginPage.js"],"sourcesContent":["import React from 'react';\r\nimport { Box, Typography, TextField, Button } from '@mui/material'; // UI Components จาก Material UI\r\nimport { useFormik } from 'formik'; // สำหรับจัดการฟอร์ม\r\nimport * as Yup from 'yup'; // ตรวจสอบความถูกต้องของข้อมูลในฟอร์ม\r\nimport { loginUser } from '../services/authService'; // ฟังก์ชันเรียก API เข้าสู่ระบบ\r\nimport { useAuth } from '../context/AuthContext'; // ดึงฟังก์ชัน login จาก Context เพื่อบันทึก token และ user\r\nimport { useNavigate } from 'react-router-dom'; // สำหรับเปลี่ยนหน้า\r\n\r\nfunction LoginPage() {\r\n  const { login } = useAuth(); // ดึงฟังก์ชัน login มาใช้\r\n  const navigate = useNavigate(); // ฟังก์ชันเปลี่ยนหน้า\r\n\r\n  // กำหนด formik สำหรับจัดการฟอร์ม login\r\n  const formik = useFormik({\r\n    initialValues: { studentId: '', password: '' }, // ค่าตั้งต้นของฟอร์ม\r\n    validationSchema: Yup.object({\r\n      // ตรวจสอบข้อมูลว่าต้องกรอกให้ครบ\r\n      studentId: Yup.string().required('กรุณากรอกรหัสนักศึกษา'),\r\n      password: Yup.string().required('กรุณากรอกรหัสผ่าน'),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      try {\r\n        // เรียก API login ส่งข้อมูลรหัสนักศึกษาและรหัสผ่าน\r\n        const res = await loginUser(values);\r\n\r\n        // บันทึก token และข้อมูลผู้ใช้ลง Context เพื่อใช้ในแอป\r\n        login(res.data.token, res.data.user);\r\n\r\n        // เปลี่ยนหน้าไปตามบทบาทผู้ใช้ (admin หรือ student)\r\n        navigate(res.data.user.role === 'admin' ? '/admin' : '/student');\r\n      } catch (err) {\r\n        // หากเข้าสู่ระบบไม่สำเร็จ แจ้งเตือน\r\n        alert('เข้าสู่ระบบไม่สำเร็จ');\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 400, mx: 'auto', mt: 10 }}>\r\n      {/* หัวข้อหน้าล็อกอิน */}\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        เข้าสู่ระบบ\r\n      </Typography>\r\n\r\n      {/* ฟอร์มล็อกอิน */}\r\n      <form onSubmit={formik.handleSubmit}>\r\n        {/* ช่องกรอกรหัสนักศึกษา */}\r\n        <TextField\r\n          label=\"รหัสนักศึกษา\"\r\n          name=\"studentId\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          value={formik.values.studentId} // เชื่อมค่าในฟอร์มกับ Formik\r\n          onChange={formik.handleChange} // อัพเดตค่าฟอร์มเมื่อผู้ใช้พิมพ์\r\n          error={formik.touched.studentId && Boolean(formik.errors.studentId)} // แสดง error ถ้าข้อมูลไม่ถูกต้อง\r\n          helperText={formik.touched.studentId && formik.errors.studentId}   // ข้อความแจ้งเตือน\r\n        />\r\n\r\n        {/* ช่องกรอกรหัสผ่าน */}\r\n        <TextField\r\n          label=\"รหัสผ่าน\"\r\n          name=\"password\"\r\n          type=\"password\" // ซ่อนรหัสผ่าน\r\n          fullWidth\r\n          margin=\"normal\"\r\n          value={formik.values.password}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.password && Boolean(formik.errors.password)}\r\n          helperText={formik.touched.password && formik.errors.password}\r\n        />\r\n\r\n        {/* ปุ่มล็อกอิน */}\r\n        <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ mt: 2 }}>\r\n          Login\r\n        </Button>\r\n\r\n        {/* ปุ่มไปหน้าลงทะเบียน */}\r\n        <Button fullWidth onClick={() => navigate('/register')} sx={{ mt: 1 }}>\r\n          ลงทะเบียน\r\n        </Button>\r\n      </form>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}