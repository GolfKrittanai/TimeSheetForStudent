{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kop_k\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\GitHubLS\\\\TimeSheetForStudent\\\\timesheet-frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\n// สร้าง Context สำหรับเก็บข้อมูล auth\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// สร้าง Provider สำหรับห่อ component หลัก\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null); // ข้อมูลผู้ใช้ เช่น id, name, role\n  const [token, setToken] = useState(null); // token JWT\n\n  // โหลดข้อมูลจาก localStorage ตอนแอปโหลด\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n    if (storedToken && storedUser) {\n      try {\n        const parsedUser = JSON.parse(storedUser);\n        setToken(storedToken);\n        setUser(parsedUser);\n      } catch (err) {\n        console.error('เกิดข้อผิดพลาดในการแปลง user จาก localStorage:', err);\n        localStorage.removeItem('user'); // ลบข้อมูลที่ผิดพลาดทิ้ง\n      }\n    }\n  }, []);\n\n  // ฟังก์ชัน login - บันทึก token และ user ลง state และ localStorage\n  const login = ({\n    token,\n    user\n  }) => {\n    setToken(token);\n    setUser(user);\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n  };\n\n  // ฟังก์ชัน logout - ล้างข้อมูลออกจาก state และ localStorage\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n// hook สำหรับใช้ auth context ได้ง่าย\n_s(AuthProvider, \"cANLe8RtnwDE5y1hInrXoZDdgy8=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","storedToken","localStorage","getItem","storedUser","parsedUser","JSON","parse","err","console","error","removeItem","login","setItem","stringify","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/kop_k/OneDrive/เดสก์ท็อป/GitHubLS/TimeSheetForStudent/timesheet-frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\n// สร้าง Context สำหรับเก็บข้อมูล auth\r\nconst AuthContext = createContext();\r\n\r\n// สร้าง Provider สำหรับห่อ component หลัก\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);   // ข้อมูลผู้ใช้ เช่น id, name, role\r\n  const [token, setToken] = useState(null); // token JWT\r\n\r\n  // โหลดข้อมูลจาก localStorage ตอนแอปโหลด\r\n  useEffect(() => {\r\n    const storedToken = localStorage.getItem('token');\r\n    const storedUser = localStorage.getItem('user');\r\n\r\n    if (storedToken && storedUser) {\r\n      try {\r\n        const parsedUser = JSON.parse(storedUser);\r\n        setToken(storedToken);\r\n        setUser(parsedUser);\r\n      } catch (err) {\r\n        console.error('เกิดข้อผิดพลาดในการแปลง user จาก localStorage:', err);\r\n        localStorage.removeItem('user'); // ลบข้อมูลที่ผิดพลาดทิ้ง\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // ฟังก์ชัน login - บันทึก token และ user ลง state และ localStorage\r\n  const login = ({ token, user }) => {\r\n    setToken(token);\r\n    setUser(user);\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n  };\r\n\r\n  // ฟังก์ชัน logout - ล้างข้อมูลออกจาก state และ localStorage\r\n  const logout = () => {\r\n    setToken(null);\r\n    setUser(null);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, token, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// hook สำหรับใช้ auth context ได้ง่าย\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE7E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAG;EAC1C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMW,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACjD,MAAMC,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAE/C,IAAIF,WAAW,IAAIG,UAAU,EAAE;MAC7B,IAAI;QACF,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACH,UAAU,CAAC;QACzCJ,QAAQ,CAACC,WAAW,CAAC;QACrBH,OAAO,CAACO,UAAU,CAAC;MACrB,CAAC,CAAC,OAAOG,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,gDAAgD,EAAEF,GAAG,CAAC;QACpEN,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;MACnC;IACF;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,KAAK,GAAGA,CAAC;IAAEb,KAAK;IAAEF;EAAK,CAAC,KAAK;IACjCG,QAAQ,CAACD,KAAK,CAAC;IACfD,OAAO,CAACD,IAAI,CAAC;IACbK,YAAY,CAACW,OAAO,CAAC,OAAO,EAAEd,KAAK,CAAC;IACpCG,YAAY,CAACW,OAAO,CAAC,MAAM,EAAEP,IAAI,CAACQ,SAAS,CAACjB,IAAI,CAAC,CAAC;EACpD,CAAC;;EAED;EACA,MAAMkB,MAAM,GAAGA,CAAA,KAAM;IACnBf,QAAQ,CAAC,IAAI,CAAC;IACdF,OAAO,CAAC,IAAI,CAAC;IACbI,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;IAChCT,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAED,oBACEnB,OAAA,CAACC,WAAW,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAAEpB,IAAI;MAAEE,KAAK;MAAEa,KAAK;MAAEG;IAAO,CAAE;IAAApB,QAAA,EACzDA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAAzB,EAAA,CA5CaF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AA6CzB,OAAO,MAAM6B,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMpC,UAAU,CAACK,WAAW,CAAC;AAAA;AAAC+B,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}