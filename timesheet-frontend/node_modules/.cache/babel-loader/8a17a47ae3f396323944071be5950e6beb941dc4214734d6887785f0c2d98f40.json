{"ast":null,"code":"import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = value => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = value => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n  if (shouldCrossfadeOpacity) {\n    var _lead$opacity, _follow$opacity;\n    target.opacity = mixNumber(0, (_lead$opacity = lead.opacity) !== null && _lead$opacity !== void 0 ? _lead$opacity : 1, easeCrossfadeIn(progress));\n    target.opacityExit = mixNumber((_follow$opacity = follow.opacity) !== null && _follow$opacity !== void 0 ? _follow$opacity : 1, 0, easeCrossfadeOut(progress));\n  } else if (isOnlyMember) {\n    var _follow$opacity2, _lead$opacity2;\n    target.opacity = mixNumber((_follow$opacity2 = follow.opacity) !== null && _follow$opacity2 !== void 0 ? _follow$opacity2 : 1, (_lead$opacity2 = lead.opacity) !== null && _lead$opacity2 !== void 0 ? _lead$opacity2 : 1, progress);\n  }\n  /**\r\n   * Mix border radius\r\n   */\n  for (let i = 0; i < numBorders; i++) {\n    const borderLabel = \"border\".concat(borders[i], \"Radius\");\n    let followRadius = getRadius(follow, borderLabel);\n    let leadRadius = getRadius(lead, borderLabel);\n    if (followRadius === undefined && leadRadius === undefined) continue;\n    followRadius || (followRadius = 0);\n    leadRadius || (leadRadius = 0);\n    const canMix = followRadius === 0 || leadRadius === 0 || isPx(followRadius) === isPx(leadRadius);\n    if (canMix) {\n      target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n      if (percent.test(leadRadius) || percent.test(followRadius)) {\n        target[borderLabel] += \"%\";\n      }\n    } else {\n      target[borderLabel] = leadRadius;\n    }\n  }\n  /**\r\n   * Mix rotation\r\n   */\n  if (follow.rotate || lead.rotate) {\n    target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n  }\n}\nfunction getRadius(values, radiusName) {\n  return values[radiusName] !== undefined ? values[radiusName] : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n  return p => {\n    // Could replace ifs with clamp\n    if (p < min) return 0;\n    if (p > max) return 1;\n    return easing(progress(min, max, p));\n  };\n}\nexport { mixValues };","map":{"version":3,"names":["mixNumber","percent","px","progress","circOut","noop","borders","numBorders","length","asNumber","value","parseFloat","isPx","test","mixValues","target","follow","lead","shouldCrossfadeOpacity","isOnlyMember","_lead$opacity","_follow$opacity","opacity","easeCrossfadeIn","opacityExit","easeCrossfadeOut","_follow$opacity2","_lead$opacity2","i","borderLabel","concat","followRadius","getRadius","leadRadius","undefined","canMix","Math","max","rotate","values","radiusName","borderRadius","compress","min","easing","p"],"sources":["C:/Users/pondz/OneDrive/เอกสาร/Github/TimeSheetForStudent-test001/TimeSheetForStudent/timesheet-frontend/node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs"],"sourcesContent":["import { mixNumber, percent, px } from 'motion-dom';\r\nimport { progress, circOut, noop } from 'motion-utils';\r\n\r\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\r\nconst numBorders = borders.length;\r\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\r\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\r\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\r\n    if (shouldCrossfadeOpacity) {\r\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\r\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\r\n    }\r\n    else if (isOnlyMember) {\r\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\r\n    }\r\n    /**\r\n     * Mix border radius\r\n     */\r\n    for (let i = 0; i < numBorders; i++) {\r\n        const borderLabel = `border${borders[i]}Radius`;\r\n        let followRadius = getRadius(follow, borderLabel);\r\n        let leadRadius = getRadius(lead, borderLabel);\r\n        if (followRadius === undefined && leadRadius === undefined)\r\n            continue;\r\n        followRadius || (followRadius = 0);\r\n        leadRadius || (leadRadius = 0);\r\n        const canMix = followRadius === 0 ||\r\n            leadRadius === 0 ||\r\n            isPx(followRadius) === isPx(leadRadius);\r\n        if (canMix) {\r\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\r\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\r\n                target[borderLabel] += \"%\";\r\n            }\r\n        }\r\n        else {\r\n            target[borderLabel] = leadRadius;\r\n        }\r\n    }\r\n    /**\r\n     * Mix rotation\r\n     */\r\n    if (follow.rotate || lead.rotate) {\r\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\r\n    }\r\n}\r\nfunction getRadius(values, radiusName) {\r\n    return values[radiusName] !== undefined\r\n        ? values[radiusName]\r\n        : values.borderRadius;\r\n}\r\n// /**\r\n//  * We only want to mix the background color if there's a follow element\r\n//  * that we're not crossfading opacity between. For instance with switch\r\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\r\n//  * element being animated but also cuts down on the number of paints triggered\r\n//  * for elements where opacity is doing that work for us.\r\n//  */\r\n// if (\r\n//     !hasFollowElement &&\r\n//     latestLeadValues.backgroundColor &&\r\n//     latestFollowValues.backgroundColor\r\n// ) {\r\n//     /**\r\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\r\n//      * We could probably create a mixer that runs at the start of the animation but\r\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\r\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\r\n//      */\r\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\r\n//         latestFollowValues.backgroundColor as string,\r\n//         latestLeadValues.backgroundColor as string\r\n//     )(p)\r\n// }\r\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\r\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\r\nfunction compress(min, max, easing) {\r\n    return (p) => {\r\n        // Could replace ifs with clamp\r\n        if (p < min)\r\n            return 0;\r\n        if (p > max)\r\n            return 1;\r\n        return easing(progress(min, max, p));\r\n    };\r\n}\r\n\r\nexport { mixValues };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}